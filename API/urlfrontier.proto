syntax = "proto3";

option java_package = "crawlercommons.urlfrontier";

package urlfrontier;

// Interface exported by the server.
service URLFrontier {
  /** Returns the names of up to N active queues
      a queue is active if it has URLs due for fetching
  **/
     rpc ListQueues(GetParams) returns (StringList) {}

  /** streams URLs due for fetching from M queues with up to N items per queue **/
     rpc GetURLs(GetParams) returns (stream URLItem) {}

  /** update a batch of URLs **/
     rpc PutURLs(stream URLItem) returns (stream String) {}

 /** returns stats for a specific queue or the whole crawl if the value if empty or null **/
     rpc stats(String) returns (Stats) {}
}


message Stats {
  uint32 size = 1;
  uint32 inProcess = 2;
  map<string, uint32> countsPerStatus = 3;
  uint32 numberOfQueues = 4;
}

/** Replace with StringValue ???  **/
message String {
  string value = 1;
}

message StringList {
  repeated string String = 1;
}


message GetParams {
  uint32 maxUrlsPerQueue = 1;
  uint32 maxQueues = 2;
  string key = 3;
  // applies to search - amount of time before a URL can be unlocked and sent again for fetching 
  uint32 delayRequestable = 4;
}


message URLItem {
  string url = 1;
  string key = 2;
  enum Status {
    DISCOVERED = 0;
    FETCHED = 1;
    REDIRECTION = 2;
    FETCH_ERROR = 3;
    ERROR = 4;
  }
  Status status = 3;
  Timestamp nextFetchDate = 4;
  map<string, StringList> metadata = 5;
}

message Empty {}

message Timestamp {
  // Represents seconds of UTC time since Unix epoch
  // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
  // 9999-12-31T23:59:59Z inclusive.
  int64 seconds = 1;

  // Non-negative fractions of a second at nanosecond resolution. Negative
  // second values with fractions must still have non-negative nanos values
  // that count forward in time. Must be from 0 to 999,999,999
  // inclusive.
  int32 nanos = 2;
}
